// Generated by jextract

package com.github.gotson.nightmonkeys.webp.lib.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$16 {

    static final FunctionDescriptor strcasecmp$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle strcasecmp$MH = RuntimeHelper.downcallHandle(
        "strcasecmp",
        constants$16.strcasecmp$FUNC
    );
    static final FunctionDescriptor strncasecmp$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle strncasecmp$MH = RuntimeHelper.downcallHandle(
        "strncasecmp",
        constants$16.strncasecmp$FUNC
    );
    static final FunctionDescriptor ffsl$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle ffsl$MH = RuntimeHelper.downcallHandle(
        "ffsl",
        constants$16.ffsl$FUNC
    );
    static final FunctionDescriptor ffsll$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle ffsll$MH = RuntimeHelper.downcallHandle(
        "ffsll",
        constants$16.ffsll$FUNC
    );
    static final FunctionDescriptor fls$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle fls$MH = RuntimeHelper.downcallHandle(
        "fls",
        constants$16.fls$FUNC
    );
    static final FunctionDescriptor flsl$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle flsl$MH = RuntimeHelper.downcallHandle(
        "flsl",
        constants$16.flsl$FUNC
    );
}


