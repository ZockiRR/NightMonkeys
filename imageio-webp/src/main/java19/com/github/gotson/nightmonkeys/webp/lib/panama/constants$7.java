// Generated by jextract

package com.github.gotson.nightmonkeys.webp.lib.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$7 {

    static final FunctionDescriptor WebPInitDecoderConfig$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle WebPInitDecoderConfig$MH = RuntimeHelper.downcallHandle(
        "WebPInitDecoderConfig",
        constants$7.WebPInitDecoderConfig$FUNC
    );
    static final FunctionDescriptor WebPIDecode$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle WebPIDecode$MH = RuntimeHelper.downcallHandle(
        "WebPIDecode",
        constants$7.WebPIDecode$FUNC
    );
    static final FunctionDescriptor WebPDecode$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle WebPDecode$MH = RuntimeHelper.downcallHandle(
        "WebPDecode",
        constants$7.WebPDecode$FUNC
    );
    static final FunctionDescriptor memchr$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle memchr$MH = RuntimeHelper.downcallHandle(
        "memchr",
        constants$7.memchr$FUNC
    );
    static final FunctionDescriptor memcmp$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle memcmp$MH = RuntimeHelper.downcallHandle(
        "memcmp",
        constants$7.memcmp$FUNC
    );
    static final FunctionDescriptor memcpy$FUNC = FunctionDescriptor.of(Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT
    );
    static final MethodHandle memcpy$MH = RuntimeHelper.downcallHandle(
        "memcpy",
        constants$7.memcpy$FUNC
    );
}


