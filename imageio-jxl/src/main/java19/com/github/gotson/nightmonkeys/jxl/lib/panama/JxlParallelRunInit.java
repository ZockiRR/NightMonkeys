// Generated by jextract

package com.github.gotson.nightmonkeys.jxl.lib.panama;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public interface JxlParallelRunInit {

    int apply(java.lang.foreign.MemoryAddress jpegxl_opaque, long num_threads);
    static MemorySegment allocate(JxlParallelRunInit fi, MemorySession session) {
        return RuntimeHelper.upcallStub(JxlParallelRunInit.class, fi, constants$0.JxlParallelRunInit$FUNC, session);
    }
    static JxlParallelRunInit ofAddress(MemoryAddress addr, MemorySession session) {
        MemorySegment symbol = MemorySegment.ofAddress(addr, 0, session);
        return (java.lang.foreign.MemoryAddress _jpegxl_opaque, long _num_threads) -> {
            try {
                return (int)constants$0.JxlParallelRunInit$MH.invokeExact((Addressable)symbol, (java.lang.foreign.Addressable)_jpegxl_opaque, _num_threads);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


