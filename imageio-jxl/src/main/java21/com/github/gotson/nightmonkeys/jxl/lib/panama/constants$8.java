// Generated by jextract

package com.github.gotson.nightmonkeys.jxl.lib.panama;

import java.lang.foreign.MemoryLayout;
import java.lang.foreign.StructLayout;
import java.lang.invoke.VarHandle;

import static java.lang.foreign.ValueLayout.JAVA_BYTE;
import static java.lang.foreign.ValueLayout.JAVA_FLOAT;
import static java.lang.foreign.ValueLayout.JAVA_INT;

final class constants$8 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$8() {
    }

    static final StructLayout const$0 = MemoryLayout.structLayout(
        JAVA_INT.withName("have_container"),
        JAVA_INT.withName("xsize"),
        JAVA_INT.withName("ysize"),
        JAVA_INT.withName("bits_per_sample"),
        JAVA_INT.withName("exponent_bits_per_sample"),
        JAVA_FLOAT.withName("intensity_target"),
        JAVA_FLOAT.withName("min_nits"),
        JAVA_INT.withName("relative_to_max_display"),
        JAVA_FLOAT.withName("linear_below"),
        JAVA_INT.withName("uses_original_profile"),
        JAVA_INT.withName("have_preview"),
        JAVA_INT.withName("have_animation"),
        JAVA_INT.withName("orientation"),
        JAVA_INT.withName("num_color_channels"),
        JAVA_INT.withName("num_extra_channels"),
        JAVA_INT.withName("alpha_bits"),
        JAVA_INT.withName("alpha_exponent_bits"),
        JAVA_INT.withName("alpha_premultiplied"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("xsize"),
            JAVA_INT.withName("ysize")
        ).withName("preview"),
        MemoryLayout.structLayout(
            JAVA_INT.withName("tps_numerator"),
            JAVA_INT.withName("tps_denominator"),
            JAVA_INT.withName("num_loops"),
            JAVA_INT.withName("have_timecodes")
        ).withName("animation"),
        MemoryLayout.sequenceLayout(108, JAVA_BYTE).withName("padding")
    ).withName("JxlBasicInfo");
    static final VarHandle const$1 = constants$8.const$0.varHandle(MemoryLayout.PathElement.groupElement("have_container"));
    static final VarHandle const$2 = constants$8.const$0.varHandle(MemoryLayout.PathElement.groupElement("xsize"));
    static final VarHandle const$3 = constants$8.const$0.varHandle(MemoryLayout.PathElement.groupElement("ysize"));
    static final VarHandle const$4 = constants$8.const$0.varHandle(MemoryLayout.PathElement.groupElement("bits_per_sample"));
    static final VarHandle const$5 = constants$8.const$0.varHandle(MemoryLayout.PathElement.groupElement("exponent_bits_per_sample"));
}


