// Generated by jextract

package com.github.gotson.nightmonkeys.jxl.lib.panama;

import java.lang.foreign.Arena;
import java.lang.foreign.MemorySegment;

/**
 * {@snippet :
 * void (*JxlImageOutCallback)(void* opaque,unsigned long x,unsigned long y,unsigned long num_pixels,void* pixels);
 *}
 */
public interface JxlImageOutCallback {

    void apply(java.lang.foreign.MemorySegment opaque, long x, long y, long num_pixels, java.lang.foreign.MemorySegment pixels);

    static MemorySegment allocate(JxlImageOutCallback fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$23.const$5, fi, constants$23.const$4, scope);
    }

    static JxlImageOutCallback ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _opaque, long _x, long _y, long _num_pixels, java.lang.foreign.MemorySegment _pixels) -> {
            try {
                constants$24.const$0.invokeExact(symbol, _opaque, _x, _y, _num_pixels, _pixels);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


