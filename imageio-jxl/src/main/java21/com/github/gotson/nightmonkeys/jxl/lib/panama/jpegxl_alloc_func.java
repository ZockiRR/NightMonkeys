// Generated by jextract

package com.github.gotson.nightmonkeys.jxl.lib.panama;

import java.lang.foreign.Arena;
import java.lang.foreign.MemorySegment;

/**
 * {@snippet :
 * void* (*jpegxl_alloc_func)(void* opaque,unsigned long size);
 *}
 */
public interface jpegxl_alloc_func {

    java.lang.foreign.MemorySegment apply(java.lang.foreign.MemorySegment opaque, long size);

    static MemorySegment allocate(jpegxl_alloc_func fi, Arena scope) {
        return RuntimeHelper.upcallStub(constants$13.const$5, fi, constants$13.const$4, scope);
    }

    static jpegxl_alloc_func ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment _opaque, long _size) -> {
            try {
                return (java.lang.foreign.MemorySegment) constants$14.const$0.invokeExact(symbol, _opaque, _size);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


